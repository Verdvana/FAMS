/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include "system.h"                   //系统头文件
#include "altera_avalon_pio_regs.h"   //PIO寄存器头文件
#include "alt_types.h"                //数据类型头文件
//#include "sys/alt_irq.h"              //中断头文件
//#include "unistd.h"                   //延时头文件


unsigned short end_o;



//----高度-----
alt_u32 adc_T,adc_P;
alt_u16 dig_T1,dig_T2,dig_T3,dig_P1,dig_P2,dig_P3,dig_P4,dig_P5,dig_P6,dig_P7,dig_P8,dig_P9;
long var1,var2,p,T,t_fine;

alt_u16 height_int,height_dec;

int main()
{
  printf("Hello from Nios II!\n");


  end_o=0;




  while(1)
  {


	  end_o=IORD_ALTERA_AVALON_PIO_DATA(END_O_BASE);

	  if(end_o)
	  {
		  printf("/--------开他妈的始-------/\r\n");


		  dig_T1 = IORD_ALTERA_AVALON_PIO_DATA(DIG_T1_BASE);
		  dig_T2 = IORD_ALTERA_AVALON_PIO_DATA(DIG_T2_BASE);
		  dig_T3 = IORD_ALTERA_AVALON_PIO_DATA(DIG_T3_BASE);
		  dig_P1 = IORD_ALTERA_AVALON_PIO_DATA(DIG_P1_BASE);
		  dig_P2 = IORD_ALTERA_AVALON_PIO_DATA(DIG_P2_BASE);
		  dig_P3 = IORD_ALTERA_AVALON_PIO_DATA(DIG_P3_BASE);
		  dig_P4 = IORD_ALTERA_AVALON_PIO_DATA(DIG_P4_BASE);
		  dig_P5 = IORD_ALTERA_AVALON_PIO_DATA(DIG_P5_BASE);
		  dig_P6 = IORD_ALTERA_AVALON_PIO_DATA(DIG_P6_BASE);
		  dig_P7 = IORD_ALTERA_AVALON_PIO_DATA(DIG_P7_BASE);
		  dig_P8 = IORD_ALTERA_AVALON_PIO_DATA(DIG_P8_BASE);
		  dig_P9 = IORD_ALTERA_AVALON_PIO_DATA(DIG_P9_BASE);
		  adc_T  = IORD_ALTERA_AVALON_PIO_DATA(ADC_T_BASE);
		  adc_P  = IORD_ALTERA_AVALON_PIO_DATA(ADC_P_BASE);




		  //-------高度数据处理--------


		  var1 = (((double)adc_T)/16384.0-((double)dig_T1)/1024.0)*((double)dig_T2);
		  var2 = ((((double)adc_T)/131072.0-((double)dig_T1)/8192.0)*(((double)adc_T)
		                /131072.0-((double)dig_T1)/8192.0))*((double)dig_T3);

		  t_fine = (unsigned long)(var1+var2);

		  T = (var1+var2)/5120.0;

		    //Pressure
		  var1 = ((double)t_fine/2.0)-64000.0;
		  var2 = var1*var1*((double)dig_P6)/32768.0;
		  var2 = var2 +var1*((double)dig_P5)*2.0;
		  var2 = (var2/4.0)+(((double)dig_P4)*65536.0);
		  var1 = (((double)dig_P3)*var1*var1/524288.0+((double)dig_P2)*var1)/524288.0;
		  var1 = (1.0+var1/32768.0)*((double)dig_P1);
		  p = 1048576.0-(double)adc_P;
		  p = (p-(var2/4096.0))*6250.0/var1;
		  var1 = ((double)dig_P9)*p*p/2147483648.0;
		  var2 = p*((double)dig_P8)/32768.0;
		  p = p+(var1+var2+((double)dig_P7))/16.0;



	      height_int = (alt_u16)p;
	      height_dec = (p-height_int)*100;




		  printf("height = %d.%d\r\n",height_int,height_dec);

	  }


  }

  return 0;
}
